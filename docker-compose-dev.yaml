version: '3'
services:

  rabbit:
    image: rabbitmq:3.12.4-management
    container_name: rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: always

  db:
    image: mongo:7.0.0
    container_name: db
    ports:
     - "27017:27017"
    restart: always

  # Service for loading database fixtures.
  db-fixture-rest-api:
    image: db-fixture-rest-api
    build: 
      context: ./services/db-fixture-rest-api
      dockerfile: Dockerfile
    container_name: db-fixture-rest-api
    volumes:
     - ./services/db-fixture-rest-api/fixtures:/usr/src/app/fixtures:z
    ports:
     - "9000:80"
    environment:
     - PORT=80
     - DBHOST=mongodb://db:27017
     - FIXTURES_DIR=fixtures
    depends_on:
      db:
        condition: service_started
    restart: always

  gateway:
    image: gateway
    build: 
      context: ./services/gateway
      dockerfile: Dockerfile-dev
    container_name: gateway
    volumes:
      - /tmp/gateway/npm-cache:/root/.npm:z
      - ./services/gateway/src:/usr/src/app/src:z
      - ./services/gateway/public:/usr/src/app/public:z
    ports:
      - "4000:80"
    environment:
      - PORT=80
      - NODE_ENV=development
    depends_on:
      - history
      - metadata
      - video-streaming
      - video-uploader
    restart: "no"

  # 
  # Uncomment this service to enable cloud storage.
  #
  # videos-storage:
  #   image: videos-storage
  #  build: 
  #    context: ./services/videos-storage
  #    dockerfile: Dockerfile-dev
  #  container_name: videos-storage
  #  volumes:
  #    - /tmp/videos-storage/npm-cache:/root/.npm:z
  #    - ./services/videos-storage/src:/usr/src/app/src:z
  #  ports:
  #   - "4001:80"
  #  environment:
  #    - PORT=80
  #    - STORAGE_BUCKET_NAME=${STORAGE_BUCKET_NAME}
  #    - STORAGE_REGION_NAME=${STORAGE_REGION_NAME}
  #    - STORAGE_ACCESS_KEY_ID=${STORAGE_ACCESS_KEY_ID}
  #    - STORAGE_SECRET_ACCESS_KEY=${STORAGE_SECRET_ACCESS_KEY}
  #    - NODE_ENV=development
  #  restart: "no"


  #
  # This is the local version of storage.
  # Instead of storing files in the cloud it stores files on the
  # local machine.
  #
  # This is "mock" for the storage microservices to make
  # local testing easier.
  #
  videos-storage:
    image: mock-storage
    build: 
      context: ./services/mock-storage
      dockerfile: Dockerfile
    container_name: videos-storage
    volumes:
      - /tmp/mock-storage/npm-cache:/root/.npm:z
      - ./services/mock-storage/src:/usr/src/app/src:z
      - ./services/mock-storage/storage:/usr/src/app/storage:z
    ports:
     - "4001:80"
    environment:
      - PORT=80
      - NODE_ENV=development
    restart: "no"

  history:
    image: history
    build: 
      context: ./services/history
      dockerfile: Dockerfile-dev
    container_name: history
    volumes:
      - /tmp/history/npm-cache:/root/.npm:z
      - ./services/history/src:/usr/src/app/src:z
    ports:
     - "4002:80"
    environment:
      - PORT=80
      - RABBIT=amqp://guest:guest@rabbit:5672
      - DBHOST=mongodb://db:27017
      - DBNAME=history
      - NODE_ENV=development
    depends_on:
      db:
        condition: service_started
      rabbit:
        condition: service_healthy
    restart: "no"

  recommendations:
    image: recommendations
    build: 
      context: ./services/recommendations
      dockerfile: Dockerfile-dev
    container_name: recommendations
    volumes:
      - /tmp/recommendations/npm-cache:/root/.npm:z
      - ./services/recommendations/src:/usr/src/app/src:z
    ports:
     - "4003:80"
    environment:
      - PORT=80
      - RABBIT=amqp://guest:guest@rabbit:5672
      - DBHOST=mongodb://db:27017
      - DBNAME=recommendations
      - NODE_ENV=development
    depends_on:
      db:
        condition: service_started
      rabbit:
        condition: service_healthy
    restart: "no"

  metadata:
    image: metadata
    build: 
      context: ./services/metadata
      dockerfile: Dockerfile-dev
    container_name: metadata
    volumes:
      - /tmp/metadata/npm-cache:/root/.npm:z
      - ./services/metadata/src:/usr/src/app/src:z
    ports:
     - "4004:80"
    environment:
      - PORT=80
      - RABBIT=amqp://guest:guest@rabbit:5672
      - DBHOST=mongodb://db:27017
      - DBNAME=metadata
      - NODE_ENV=development
    depends_on:
      db:
        condition: service_started
      rabbit:
        condition: service_healthy
    restart: "no"

  video-uploader:
    image: video-uploader
    build: 
      context: ./services/video-uploader
      dockerfile: Dockerfile-dev
    container_name: video-uploader
    volumes:
      - /tmp/video-uploader/npm-cache:/root/.npm:z
      - ./services/video-uploader/src:/usr/src/app/src:z
      - ./services/video-uploader/uploads:/usr/src/app/uploads:z
    ports:
     - "4005:80"
    environment:
      - PORT=80
      - RABBIT=amqp://guest:guest@rabbit:5672
      - NODE_ENV=development
    depends_on:
      rabbit:
        condition: service_healthy
      videos-storage:
        condition: service_started
    restart: "no"

  video-streaming:
    image: video-streaming
    build: 
      context: ./services/video-streaming
      dockerfile: Dockerfile-dev
    container_name: video-streaming
    volumes:
      - /tmp/video-streaming/npm-cache:/root/.npm:z
      - ./services/video-streaming/src:/usr/src/app/src:z
      - ./services/video-streaming/videos:/usr/src/app/videos:z
    ports:
     - "4006:80"
    environment:
      - PORT=80
      - RABBIT=amqp://guest:guest@rabbit:5672
      - NODE_ENV=development
    depends_on:
      rabbit:
        condition: service_healthy
      videos-storage:
        condition: service_started
    restart: "no"